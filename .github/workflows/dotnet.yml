# Building and testing .NET
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI

permissions:
  contents: read

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOTNET_VERSION: 8.0.x
  PACKAGE_NAME: nanotaboada/dotnet-samples-aspnetcore-webapi

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          # The action searches for packages.lock.json in the repository root,
          # calculates their hash, and uses it as a part of the cache key.
          cache: true
          # Use cache-dependency-path for cases when multiple dependency files
          # are used, or they are located in different subdirectories.
          cache-dependency-path: |
            src/Dotnet.Samples.AspNetCore.WebApi/packages.lock.json
            test/Dotnet.Samples.AspNetCore.WebApi.Tests/packages.lock.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Build projects
        run: dotnet build --no-restore

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Lint commit messages
        uses: wagoid/commitlint-github-action@v6.2.1

      - name: Run tests and generate Cobertura coverage reports
        run: dotnet test --results-directory "coverage" --collect:"XPlat Code Coverage" --settings .runsettings

      - name: Install dotnet-coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Merge Cobertura coverage reports
        run: dotnet-coverage merge coverage/**/*.cobertura.xml --output coverage/cobertura.xml --output-format cobertura

      - name: Install ReportGenerator tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Markdown summary of coverage report
        run: reportgenerator -reports:coverage/cobertura.xml -targetdir:coverage -reporttypes:"MarkdownSummaryGithub"

      - name: Display Markdown summary of coverage report
        run: cat coverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

      - name: Upload Cobertura coverage report artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: cobertura.xml
          path: coverage/cobertura.xml

  coverage:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [codecov, codacy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Download Cobertura coverage report artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: cobertura.xml

      - name: Upload Cobertura coverage report to ${{ matrix.service }}
        if: ${{ matrix.service == 'codecov' }}
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cobertura.xml
          use_oidc: false

      - name: Upload Cobertura coverage report to ${{ matrix.service }}
        if: ${{ matrix.service == 'codacy' }}
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: cobertura.xml

  container:
    needs: coverage
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build and push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ env.PACKAGE_NAME }}:latest
            ghcr.io/${{ env.PACKAGE_NAME }}:sha-${{ github.sha }}
